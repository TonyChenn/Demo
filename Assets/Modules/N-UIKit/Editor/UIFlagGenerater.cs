using UnityEditor;
using System.IO;
using UnityEngine;
using System.Text;
using System;

public class UIFlagGenerater
{
	[MenuItem("Assets/代码生成/生成UIFlag")]
	static void GenerateUIPrefabInUIPackage()
	{
		string uiBundleFolder = $"{Path_BuildBundle.BundleRootFolder}/UI/Prefabs";

		if (!Directory.Exists(uiBundleFolder))
		{
			Debug.LogError($"文件夹不存在：{uiBundleFolder}");
			return;
		}
		var dirs = Directory.GetDirectories(uiBundleFolder);

		StringBuilder builder = new StringBuilder();
		builder.AppendLine("/// <summary>)");
		builder.AppendLine("/// Generated By N-UIKit/UIFlagGenerater");
		builder.AppendLine("/// 自动生成，请勿手动修改");
		builder.AppendLine("/// <summary>)");
		builder.AppendLine();

		/// UIPackage
		builder.AppendLine("public enum UIPackage");
		builder.AppendLine("{");
		builder.AppendLine("\tNone\t\t= -1,");
		for (int i = 0; i < dirs.Length; i++)
		{
			string dirName = Path.GetFileNameWithoutExtension(dirs[i]);
			builder.AppendLine($"\t{dirName}\t\t= {i},");
		}
		builder.AppendLine("}");
		builder.AppendLine("");


		// UIFlag
		builder.AppendLine("public enum UIFlag");
		builder.AppendLine("{");
		builder.AppendLine("\tNone\t\t\t= -1,");

		for (int i = 0; i < dirs.Length; i++)
		{
			string dirName = Path.GetFileNameWithoutExtension(dirs[i]);

			builder.AppendLine("\t/// <summary>)");
			builder.AppendLine($"\t/// {dirName}");
			builder.AppendLine("\t/// <summary>)");
			string[] files = Directory.GetFiles(dirs[i], "*.prefab", SearchOption.TopDirectoryOnly);
			for (int j = 0; j < files.Length; j++)
			{
				string fileName = Path.GetFileNameWithoutExtension(files[j]);
				builder.Append($"\t{fileName}");
				if (j == 0) { builder.Append($"\t\t\t= {i * 1000}"); }
				builder.AppendLine(",");
			}
			if (1 < dirs.Length - 1) { builder.AppendLine(Environment.NewLine); }
		}
		builder.AppendLine("}");
		builder.AppendLine();

		// Extention method
		builder.AppendLine(@"
/// <summary>
/// UIFlagExtention
/// </summary>
public static class UIFlagExtention
{
	public static UIPackage GetUIPackage(this UIFlag flag)
	{
		if(flag == UIFlag.None) return UIPackage.None;

		int result = (int)flag / 1000;
		return (UIPackage)result;
	}
}");


		string savePath = $"{Path_NCore.DefaultScriptFolder}/UI/Generate/UIFlag.cs";
		if (!Directory.Exists(Path.GetDirectoryName(savePath)))
		{
			Directory.CreateDirectory(Path.GetDirectoryName(savePath));
		}
		File.WriteAllText(savePath, builder.ToString(), Encoding.UTF8);
		AssetDatabase.Refresh();
	}
}
